<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Odoo Open Treasures (Posts about views)</title><link>http://blog.odooist.com/</link><description></description><atom:link href="http://blog.odooist.com/categories/views.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2019 &lt;a href="mailto:odooist@gmail.com"&gt;Odooist&lt;/a&gt; </copyright><lastBuildDate>Sat, 16 Nov 2019 04:02:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Form's initial mode</title><link>http://blog.odooist.com/posts/forms-initial-mode/</link><dc:creator>Odooist</dc:creator><description>&lt;div&gt;&lt;p&gt;When you click on a tree view row a form view is opened and this form is opened
in read mode.&lt;/p&gt;
&lt;p&gt;When you click the &lt;code class="docutils literal"&gt;Create&lt;/code&gt; button from a tree view, a new record form view is opened
in edit mode (how otherwise? :-)&lt;/p&gt;
&lt;p&gt;But sometimes it's more usable to open an existing immediately record in edit mode.&lt;/p&gt;
&lt;p&gt;This can be done using &lt;code class="docutils literal"&gt;form&lt;/code&gt; option &lt;code class="docutils literal"&gt;initial_mode&lt;/code&gt; like is shown in the following example:&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_f2747803f2e84a64b7b07c0908bd32a6-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;options=&lt;/span&gt;&lt;span class="s"&gt;"{'initial_mode': 'view'}"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This option is available in all Odoo versions.&lt;/p&gt;&lt;/div&gt;</description><category>views</category><guid>http://blog.odooist.com/posts/forms-initial-mode/</guid><pubDate>Sat, 16 Nov 2019 03:21:21 GMT</pubDate></item><item><title>New xpath element named "move"</title><link>http://blog.odooist.com/posts/new-xpath-element-named-move/</link><dc:creator>Odooist</dc:creator><description>&lt;div&gt;&lt;p&gt;The position='move' has been introduced to move an element in an inherited
view.&lt;/p&gt;
&lt;p&gt;It's used as&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_c6277706fb6c4e20beeacfed7c97ea35-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;xpath&lt;/span&gt; &lt;span class="na"&gt;expr=&lt;/span&gt;&lt;span class="s"&gt;"//@target"&lt;/span&gt; &lt;span class="na"&gt;position=&lt;/span&gt;&lt;span class="s"&gt;"after"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_c6277706fb6c4e20beeacfed7c97ea35-2"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;xpath&lt;/span&gt; &lt;span class="na"&gt;expr=&lt;/span&gt;&lt;span class="s"&gt;"//@node"&lt;/span&gt; &lt;span class="na"&gt;position=&lt;/span&gt;&lt;span class="s"&gt;"move"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_c6277706fb6c4e20beeacfed7c97ea35-3"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/xpath&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Or also:&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_df4c01ad88744672b049b26160be4835-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;field&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"target_field"&lt;/span&gt; &lt;span class="na"&gt;position=&lt;/span&gt;&lt;span class="s"&gt;"after"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_df4c01ad88744672b049b26160be4835-2"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;field&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"my_field"&lt;/span&gt; &lt;span class="na"&gt;position=&lt;/span&gt;&lt;span class="s"&gt;"move"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_df4c01ad88744672b049b26160be4835-3"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/field&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;In the above example &lt;code class="docutils literal"&gt;my_field&lt;/code&gt; is placed &lt;em&gt;after&lt;/em&gt; &lt;code class="docutils literal"&gt;target_field&lt;/code&gt; in the parent form.&lt;/p&gt;
&lt;p&gt;So now we can inherit and have the ability to manipulate fields order in views, not only add
new fields.&lt;/p&gt;&lt;/div&gt;</description><category>12.0</category><category>inherit</category><category>views</category><category>xml</category><guid>http://blog.odooist.com/posts/new-xpath-element-named-move/</guid><pubDate>Fri, 15 Nov 2019 13:37:56 GMT</pubDate></item><item><title>Hiding entire tree column with column_invisible</title><link>http://blog.odooist.com/posts/hiding-entire-tree-column-with-column_invisible/</link><dc:creator>Odooist</dc:creator><description>&lt;div&gt;&lt;p&gt;We all know a way to hide a field in tree &amp;amp; form views using &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;attrs={'invisible':&lt;/span&gt; &lt;span class="pre"&gt;[(...)]}&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We also know that we can hide &lt;strong&gt;entire column&lt;/strong&gt; using &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;invisible="1"&lt;/span&gt;&lt;/code&gt; attribute like this:&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_ee345fe991a84a3482fdd2720fea7e2a-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;tree&lt;/span&gt; &lt;span class="na"&gt;decoration-warning=&lt;/span&gt;&lt;span class="s"&gt;"event_input_mode == True"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_ee345fe991a84a3482fdd2720fea7e2a-2"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;field&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"event_input_mode"&lt;/span&gt; &lt;span class="na"&gt;invisible=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_ee345fe991a84a3482fdd2720fea7e2a-3"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;field&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_ee345fe991a84a3482fdd2720fea7e2a-4"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;field&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"facility"&lt;/span&gt; &lt;span class="na"&gt;invisible=&lt;/span&gt;&lt;span class="s"&gt;"context.get('hide_facility')"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_ee345fe991a84a3482fdd2720fea7e2a-5"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;field&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"uid"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_ee345fe991a84a3482fdd2720fea7e2a-6"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/tree&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;In the above example we need &lt;code class="docutils literal"&gt;event_input_mode&lt;/code&gt; column just to highlight a row if
it have &lt;code class="docutils literal"&gt;event_input_mode&lt;/code&gt; set so we hide it with &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;invisible="1"&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We can also notice that we can use &lt;code class="docutils literal"&gt;context&lt;/code&gt; values in condition expression.
In the above example if &lt;code class="docutils literal"&gt;context&lt;/code&gt; has &lt;code class="docutils literal"&gt;hide_facility&lt;/code&gt; key then entire column is hidden.&lt;/p&gt;
&lt;div class="section" id="the-treasure"&gt;
&lt;h2&gt;The treasure&lt;/h2&gt;
&lt;p&gt;But what if you need to hide entire column by a condition coming from complex business
logic implemented in Python?&lt;/p&gt;
&lt;p&gt;Here &lt;strong&gt;column_invisible&lt;/strong&gt; attribute comes!&lt;/p&gt;
&lt;p&gt;See this examples:&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_587fb9f953b8427fa3a2fc1a1d9bca7b-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;tree&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_587fb9f953b8427fa3a2fc1a1d9bca7b-2"&gt;&lt;/a&gt;    ...
&lt;a name="rest_code_587fb9f953b8427fa3a2fc1a1d9bca7b-3"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;field&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt; &lt;span class="na"&gt;attrs=&lt;/span&gt;&lt;span class="s"&gt;"{'column_invisible': [('parent.product_id', '!=', False)]}"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_587fb9f953b8427fa3a2fc1a1d9bca7b-4"&gt;&lt;/a&gt;    ...
&lt;a name="rest_code_587fb9f953b8427fa3a2fc1a1d9bca7b-5"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/tree&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;By digging the source code I can see &lt;code class="docutils literal"&gt;column_invisible&lt;/code&gt; was introduced in Odoo 11.0.&lt;/p&gt;
&lt;p&gt;Nice, but works &lt;strong&gt;only&lt;/strong&gt; for &lt;code class="docutils literal"&gt;many2one&lt;/code&gt; and &lt;code class="docutils literal"&gt;one2many&lt;/code&gt; fields :-)&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>11.0</category><category>12.0</category><category>views</category><guid>http://blog.odooist.com/posts/hiding-entire-tree-column-with-column_invisible/</guid><pubDate>Fri, 15 Nov 2019 11:15:55 GMT</pubDate></item></channel></rss>